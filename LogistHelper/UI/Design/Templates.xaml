<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="BottomBorder" TargetType="{x:Type Border}">
        <Style.Setters>
            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType=Control}, Path=Background}"/>
            <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource AncestorType=Control}, Path=BorderThickness}"/>
            <Setter Property="CornerRadius" Value="5"/>
            <Setter Property="ClipToBounds" Value="True"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderGradient}"/>
        </Style.Setters>
    </Style>

    <Style x:Key="TopBorder" TargetType="{x:Type Border}">
        <Style.Setters>
            <Setter Property="CornerRadius" Value="4"/>
            <Setter Property="Background" Value="{StaticResource GlassImitateGradient}"/>
        </Style.Setters>
    </Style>

    <!--#endregion  BORDER-->


    <!--#region  BUTTON-->

    <ControlTemplate x:Key="ButtonTemplate" TargetType="{x:Type ButtonBase}">
        <Border 
            x:Name="border" 
            Style="{StaticResource BottomBorder}">

            <Grid>

                <Border 
                    Style="{StaticResource TopBorder}"
                    x:Name="innerBorder"/>

                <ContentPresenter 
                    x:Name="contentPresenter" 
                    Focusable="False" 
                    Grid.RowSpan="2"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" 
                    RecognizesAccessKey="True" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>


        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter 
                    Property="Opacity" 
                    TargetName="innerBorder" 
                    Value="0.8"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter 
                    Property="Opacity" 
                    TargetName="innerBorder" 
                    Value="0"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter 
                    Property="Opacity" 
                    TargetName="border" 
                    Value="0.2"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <ControlTemplate x:Key="ToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
        <Border 
            x:Name="border" 
            Style="{StaticResource BottomBorder}">

            <Grid>

                <Border 
                    Style="{StaticResource TopBorder}"
                    x:Name="innerBorder"/>

                <ContentPresenter 
                    x:Name="contentPresenter" 
                    Focusable="False" 
                    Grid.RowSpan="2"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" 
                    RecognizesAccessKey="True" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>


        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter 
                    Property="Opacity" 
                    TargetName="innerBorder" 
                    Value="0.8"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter 
                    Property="Opacity" 
                    TargetName="innerBorder" 
                    Value="0"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter 
                    Property="Background" 
                    TargetName="border" 
                    Value="{StaticResource AcceptBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter 
                    Property="Opacity" 
                    TargetName="border" 
                    Value="0.2"/>
            </Trigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>

    <ControlTemplate x:Key="ToggleButtonNeuralTemplate" TargetType="{x:Type ToggleButton}">
        <Border 
            x:Name="border" 
            Style="{StaticResource BottomBorder}">

            <Grid>

                <Border 
                    Style="{StaticResource TopBorder}"
                    x:Name="innerBorder"/>

                <ContentPresenter 
                    x:Name="contentPresenter" 
                    Focusable="False" 
                    Grid.RowSpan="2"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" 
                    RecognizesAccessKey="True" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>


        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter 
                    Property="Opacity" 
                    TargetName="innerBorder" 
                    Value="0.8"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter 
                    Property="Opacity" 
                    TargetName="innerBorder" 
                    Value="0"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter 
                    Property="Background" 
                    TargetName="border" 
                    Value="{StaticResource NeutralTwoDarkBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter 
                    Property="Opacity" 
                    TargetName="border" 
                    Value="0.2"/>
            </Trigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>

    <ControlTemplate x:Key="TransparentToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
        <Border 
            x:Name="border" 
            Style="{StaticResource BottomBorder}">

            <Grid>

                <Border 
                    Style="{StaticResource TopBorder}"
                    x:Name="innerBorder"/>

                <ContentPresenter 
                    x:Name="contentPresenter" 
                    Focusable="False" 
                    Grid.RowSpan="2"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" 
                    RecognizesAccessKey="True" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>


        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter 
                    Property="Opacity" 
                    TargetName="innerBorder" 
                    Value="0.8"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter 
                    Property="Opacity" 
                    TargetName="innerBorder" 
                    Value="0"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter 
                    Property="Background" 
                    TargetName="border" 
                    Value="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton}, Path=Background}"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="false">
                <Setter 
                    Property="Background" 
                    TargetName="border" 
                    Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter 
                    Property="Opacity" 
                    TargetName="border" 
                    Value="0.2"/>
            </Trigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>


    <ControlTemplate x:Key="TransparentButtonTemplate" TargetType="{x:Type ButtonBase}">
        <Border 
            x:Name="border"
            Style="{StaticResource BottomBorder}"
            Background="Transparent"
            BorderThickness="0"
            SnapsToDevicePixels="True">

            <Grid>

                <Border 
                    Style="{StaticResource TopBorder}"
                    x:Name="innerBorder"
                    Opacity="0"/>

                <ContentPresenter 
                    x:Name="contentPresenter" 
                    Focusable="False" 
                    Grid.RowSpan="2"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" 
                    RecognizesAccessKey="True" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>


            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter 
                    Property="Opacity" 
                    TargetName="innerBorder" 
                    Value="0.2"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter 
                    Property="Opacity" 
                    TargetName="innerBorder" 
                    Value="0.5"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter 
                    Property="Opacity" 
                    TargetName="border" 
                    Value="0.2"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <ControlTemplate x:Key="SwitchToggle" TargetType="{x:Type ToggleButton}">

        <Border 
            Width="40"
            Height="20"
            x:Name="border" 
            Style="{StaticResource BottomBorder}">

            <Grid
                Width="14"
                Height="14"
                Margin="0 0 20 0"
                VerticalAlignment="Center"
                x:Name="rectangle">

                <Border 
                    CornerRadius="4"
                    x:Name="downBorder"/>

                <Border 
                    Style="{StaticResource TopBorder}"
                    x:Name="upBorder"/>

            </Grid>


        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter 
                    Property="Opacity" 
                    TargetName="border" 
                    Value="0.2"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter 
                    Property="Opacity" 
                    TargetName="upBorder" 
                    Value="0.8"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" 
                        TargetName="downBorder" 
                        Value="{StaticResource AcceptBrush}"/>
            </Trigger>
            <EventTrigger RoutedEvent="ToggleButton.Checked">
                <BeginStoryboard>
                    <Storyboard>
                        <ThicknessAnimation
                                    Storyboard.TargetName="rectangle"
                                    Storyboard.TargetProperty="Margin"
                                    To="20 0 0 0"
                                    Duration="0:0:0.3"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                <BeginStoryboard>
                    <Storyboard>
                        <ThicknessAnimation
                             Storyboard.TargetName="rectangle"
                             Storyboard.TargetProperty="Margin"
                             To="0 0 20 0"
                             Duration="0:0:0.3"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--#endregion  BUTTON-->


    <!--#region TEXT BOX-->

    <ControlTemplate x:Key="TextBoxTemplate" TargetType="{x:Type TextBoxBase}">
        <Border 
            x:Name="border"
            Style="{StaticResource BottomBorder}">

            <Grid>
                <Border 
                    Style="{StaticResource TopBorder}"
                    x:Name="innerBorder"
                    Opacity="0.3"/>

                <ScrollViewer 
                    x:Name="PART_ContentHost" 
                    Focusable="False" 
                    HorizontalScrollBarVisibility="Hidden" 
                    VerticalScrollBarVisibility="Hidden"/>
            </Grid>

        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter 
                    Property="Opacity" 
                    TargetName="innerBorder" 
                    Value="0.5"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter 
                    Property="Opacity" 
                    TargetName="innerBorder" 
                    Value="0"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter 
                    Property="Opacity" 
                    TargetName="border" 
                    Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="CustomPasswordBox" TargetType="{x:Type PasswordBox}">
        <Border 
            x:Name="border"
            CornerRadius="5"
            BorderThickness="{TemplateBinding BorderThickness}"
            Background="{TemplateBinding Background}"
            ClipToBounds="True"
            BorderBrush="{StaticResource BorderGradient}"
            SnapsToDevicePixels="True">

            <Grid>
                <Border 
                    Style="{StaticResource TopBorder}"
                    x:Name="innerBorder"
                    Opacity="0.3"/>

                <ScrollViewer 
                    x:Name="PART_ContentHost" 
                    Focusable="False" 
                    HorizontalScrollBarVisibility="Hidden" 
                    VerticalScrollBarVisibility="Hidden"/>
            </Grid>

        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter 
                    Property="Opacity" 
                    TargetName="innerBorder" 
                    Value="0.5"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter 
                    Property="Opacity" 
                    TargetName="innerBorder" 
                    Value="0"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter 
                    Property="Opacity" 
                    TargetName="border" 
                    Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--#endregion TEXT BOX-->


    <!--#region  SCROLL VIEWER-->

    <Style x:Key="ThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">

                    <Grid>
                        <Border
                            x:Name="rectangle"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Height="{TemplateBinding Height}" 
                            Width="{TemplateBinding Width}"
                            SnapsToDevicePixels="True" 
                            Style="{StaticResource BottomBorder}">
                            <Border
                                x:Name="topRectangle"
                                Style="{StaticResource TopBorder}"/>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter 
                                Property="Opacity" 
                                TargetName="topRectangle" 
                                Value="0.9"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter 
                                Property="Opacity" 
                                TargetName="topRectangle" 
                                Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsDragging" Value="true">
                            <Setter 
                                Property="Opacity" 
                                TargetName="topRectangle" 
                                Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrolBarStyle" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="MinWidth" Value="5"/>
        <Setter Property="BorderThickness" Value="1,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                            <RowDefinition Height="0.00001*"/>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                        </Grid.RowDefinitions>

                        <RepeatButton 
                            x:Name="PART_LineUpButton"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1"
                            Command="{x:Static ScrollBar.LineUpCommand}" 
                            IsEnabled="{TemplateBinding IsMouseOver}" 
                            Template="{StaticResource ButtonTemplate}">

                            <Path 
                                x:Name="ArrowTop" 
                                Data="M 0,4 C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4 z" 
                                Fill="{TemplateBinding BorderBrush}" 
                                Margin="1 2" 
                                Stretch="Uniform"/>
                        </RepeatButton>

                        <Track x:Name="PART_Track" 
                               IsDirectionReversed="true" 
                               IsEnabled="{TemplateBinding IsMouseOver}" 
                               Grid.Row="1">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton 
                                    Command="{x:Static ScrollBar.PageUpCommand}" 
                                    Template="{StaticResource TransparentButtonTemplate}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton 
                                    Command="{x:Static ScrollBar.PageDownCommand}" 
                                    Template="{StaticResource TransparentButtonTemplate}"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Background="{TemplateBinding Background}"
                                    Style="{StaticResource ThumbStyle}"/>
                            </Track.Thumb>
                        </Track>

                        <RepeatButton 
                            x:Name="PART_LineDownButton" 
                            Background="{TemplateBinding Background}"
                            BorderThickness="1"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Command="{x:Static ScrollBar.LineDownCommand}" 
                            IsEnabled="{TemplateBinding IsMouseOver}" 
                            Grid.Row="2" 
                            Template="{StaticResource ButtonTemplate}">
                            <Path 
                                x:Name="ArrowBottom" 
                                Data="M 0,2.5 C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5 z" 
                                Fill="{TemplateBinding BorderBrush}" 
                                Margin="1 2" Stretch="Uniform"/>
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>


        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="MinHeight" Value="5"/>
                <Setter Property="BorderThickness" Value="0,1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                    <ColumnDefinition Width="0.00001*"/>
                                    <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                </Grid.ColumnDefinitions>

                                <RepeatButton 
                                    x:Name="PART_LineLeftButton" 
                                    Command="{x:Static ScrollBar.LineLeftCommand}" 
                                    IsEnabled="{TemplateBinding IsMouseOver}"
                                    Background="{TemplateBinding Background}"
                                    BorderThickness="1"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Template="{StaticResource ButtonTemplate}">
                                    <Path x:Name="ArrowLeft" 
                                          Data="M 3.18,7 C3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7 z" 
                                          Fill="{TemplateBinding BorderBrush}"
                                          Margin="2 1" 
                                          Stretch="Uniform"/>
                                </RepeatButton>
                                <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton 
                                            Command="{x:Static ScrollBar.PageLeftCommand}" 
                                            Template="{StaticResource TransparentButtonTemplate}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton 
                                            Command="{x:Static ScrollBar.PageRightCommand}" 
                                            Template="{StaticResource TransparentButtonTemplate}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            Background="{TemplateBinding Background}"
                                            Style="{StaticResource ThumbStyle}"/>
                                    </Track.Thumb>
                                </Track>
                                <RepeatButton 
                                    x:Name="PART_LineRightButton" 
                                    Background="{TemplateBinding Background}"
                                    BorderThickness="1"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Command="{x:Static ScrollBar.LineRightCommand}" 
                                    Grid.Column="2" 
                                    IsEnabled="{TemplateBinding IsMouseOver}" 
                                    Template="{StaticResource ButtonTemplate}">
                                    <Path x:Name="ArrowRight" 
                                          Data="M 1.81,7 C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7 z" 
                                          Fill="{TemplateBinding BorderBrush}" 
                                          Margin="2 1" 
                                          Stretch="Uniform"/>
                                </RepeatButton>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="ScrolViewerTemplate" TargetType="{x:Type ScrollViewer}">
        <Grid x:Name="Grid" 
              Background="Transparent">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <ScrollContentPresenter 
                x:Name="PART_ScrollContentPresenter" 
                CanHorizontallyScroll="False" 
                ContentTemplate="{TemplateBinding ContentTemplate}" 
                CanVerticallyScroll="False" 
                Grid.Column="0" 
                Content="{TemplateBinding Content}" 
                CanContentScroll="{TemplateBinding CanContentScroll}" 
                Margin="{TemplateBinding Padding}" 
                Grid.Row="0"/>
            <ScrollBar 
                 x:Name="PART_VerticalScrollBar" 
                 AutomationProperties.AutomationId="VerticalScrollBar" 
                 Cursor="Arrow" 
                 Grid.Column="1"
                 Width="10"
                 Maximum="{TemplateBinding ScrollableHeight}"
                 Minimum="0" 
                 Grid.Row="0"
                 Background="{TemplateBinding Background}"
                 BorderBrush="{TemplateBinding BorderBrush}"
                 Style="{StaticResource ScrolBarStyle}"
                 Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                 ViewportSize="{TemplateBinding ViewportHeight}" 
                 Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
            <ScrollBar 
                 x:Name="PART_HorizontalScrollBar" 
                 AutomationProperties.AutomationId="HorizontalScrollBar" 
                 Cursor="Arrow"
                 Height="10"
                 Grid.Column="0" 
                 Style="{StaticResource ScrolBarStyle}"
                 Maximum="{TemplateBinding ScrollableWidth}" 
                 Minimum="0" Orientation="Horizontal" 
                 Grid.Row="1"
                 Background="{TemplateBinding Background}"
                 BorderBrush="{TemplateBinding BorderBrush}"
                 Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                 ViewportSize="{TemplateBinding ViewportWidth}" 
                 Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
        </Grid>
    </ControlTemplate>

    <!--#endregion  SCROLL VIEWER-->


    <!--#region  COMBOBOX-->

    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border 
                        x:Name="border" 
                        Style="{StaticResource BottomBorder}">

                        <Grid>

                            <Grid
                                Background="Transparent">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition
                                        Width="auto"/>
                                </Grid.ColumnDefinitions>

                                <Border 
                                    Grid.Column="1"
                                    x:Name="splitBorder"
                                    Background="Transparent"
                                    BorderBrush="{StaticResource BorderGradient}"
                                    BorderThickness="1 0 0 0" 
                                    SnapsToDevicePixels="true"
                                    HorizontalAlignment="Right" 
                                    Margin="0" 
                                    Width="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ActualHeight}">

                                    <Path 
                                        x:Name="arrow" 
                                        StrokeThickness="1"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Data="M 0,2.5 C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5 z" 
                                        Fill="{TemplateBinding BorderBrush}" 
                                        Stroke="{TemplateBinding BorderBrush}"
                                        Margin="3,4,3,3" />
                                </Border>
                            </Grid>

                            <Border 
                                Style="{StaticResource TopBorder}"
                                x:Name="innerBorder"
                                Opacity="0.3"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter 
                                    Property="Opacity" 
                                    TargetName="innerBorder" 
                                    Value="0.8"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter 
                                    Property="Opacity" 
                                    TargetName="innerBorder" 
                                    Value="0"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter 
                                Property="Opacity" 
                                TargetName="border" 
                                Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">

        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>

            <Popup x:Name="PART_Popup" 
                   Width="{Binding ElementName=templateRoot, Path=ActualWidth}"
                   Grid.ColumnSpan="2" 
                   AllowsTransparency="true" 
                   MaxHeight="250"
                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                   Margin="1"
                   VerticalOffset="3"
                   Placement="Bottom" 
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">

                <Border x:Name="dropDownBorder" 
                    Background="{StaticResource DarkBrush}" 
                    BorderBrush="{TemplateBinding BorderBrush}" 
                    CornerRadius="5"
                    Margin="0 3"
                    Padding="0 3"
                    BorderThickness="{TemplateBinding BorderThickness}">
                    <ScrollViewer 
                        Template="{StaticResource ScrolViewerTemplate}"
                        Background="{TemplateBinding BorderBrush}"
                        BorderBrush="{TemplateBinding Background}"
                        x:Name="DropDownScrollViewer">
                        <ItemsPresenter 
                             RenderOptions.ClearTypeHint="Enabled"
                             x:Name="ItemsPresenter" 
                             KeyboardNavigation.DirectionalNavigation="Contained" 
                             SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </ScrollViewer>
                </Border>
            </Popup>

            <ToggleButton 
                x:Name="toggleButton" 
                Grid.ColumnSpan="2"
                Background="{TemplateBinding Background}" 
                BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}" 
                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                Style="{StaticResource ComboBoxToggleButton}"/>

            <Border
                    x:Name="contentBorder"
                    BorderThickness="0"
                    CornerRadius="5">

                <ContentPresenter 
                        x:Name="contentPresenter"
                        ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                        Content="{TemplateBinding SelectionBoxItem}"
                        ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                        IsHitTestVisible="false" 
                        Margin="{TemplateBinding Padding}" 
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                        VerticalAlignment="Center"/>

            </Border>

        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter 
                        Property="Opacity" 
                        TargetName="templateRoot" 
                        Value="0.5"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--#endregion  COMBOBOX-->


    <!--#region  CHECK BOX-->

    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <ControlTemplate x:Key="CheckBoxTemplate" TargetType="{x:Type CheckBox}">
        <Grid 
            x:Name="templateRoot" 
            Background="Transparent" 
            SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Border x:Name="checkBoxBorder" 
                    Style="{StaticResource BottomBorder}"
                    BorderThickness="1" 
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="1" 
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                <Border
                    x:Name="innerBorder"
                    Style="{StaticResource TopBorder}"
                    Padding="2">
                    <Grid x:Name="markGrid">


                        <Path 
                                x:Name="optionMark" 
                                Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " 
                                Fill="{TemplateBinding Foreground}" 
                                Margin="1" 
                                Opacity="0" 
                                Stretch="None"/>
                        <Rectangle x:Name="indeterminateMark" 
                                Fill="{TemplateBinding Foreground}" 
                                Margin="2" 
                                Opacity="0"/>


                    </Grid>

                </Border>
            </Border>

            <ContentPresenter 
                    x:Name="contentPresenter" 
                    Grid.Column="1" 
                    Focusable="False" 
                    TextElement.Foreground="{TemplateBinding Foreground}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                    Margin="{TemplateBinding Padding}" 
                    RecognizesAccessKey="True" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasContent" Value="true">
                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                <Setter Property="Padding" Value="4,-1,0,0"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter 
                        Property="Opacity" 
                        TargetName="innerBorder" 
                        Value="0.8"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" TargetName="templateRoot" Value="0.5"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter 
                        Property="Opacity" 
                        TargetName="innerBorder" 
                        Value="0"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="{x:Null}">
                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <ControlTemplate x:Key="RadioButtonTemplate"  TargetType="{x:Type RadioButton}">

        <Grid x:Name="templateRoot" 
              Background="Transparent" 
              SnapsToDevicePixels="True">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Border x:Name="radioBorder" 
                Style="{StaticResource BottomBorder}"
                BorderThickness="1" 
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                Margin="1" 
                CornerRadius="100"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">

                <Border
                    x:Name="innerBorder"
                    Style="{StaticResource TopBorder}"
                    Padding="2">
                    <Grid 
                        x:Name="markGrid" 
                        Margin="2">
                        <Ellipse 
                            x:Name="optionMark"
                            Fill="{TemplateBinding Foreground}" 
                            MinWidth="6" 
                            MinHeight="6" 
                            Opacity="0"/>
                    </Grid>
                </Border>

            </Border>

            <ContentPresenter 
                x:Name="contentPresenter" 
                Grid.Column="1" 
                Focusable="False" 
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                Margin="{TemplateBinding Padding}" 
                RecognizesAccessKey="True" 
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasContent" Value="true">
                <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                <Setter Property="Padding" Value="4,-1,0,0"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter 
                        Property="Opacity" 
                        TargetName="innerBorder" 
                        Value="0.8"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" TargetName="templateRoot" Value="0.5"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter 
                        Property="Opacity" 
                        TargetName="innerBorder" 
                        Value="0"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="{x:Null}">
                <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--#endregion  CHECK BOX-->


    <!--#region LIST BOX-->


    <ControlTemplate x:Key="ListBoxTemplate" TargetType="{x:Type ListBox}">
        <Border 
            x:Name="Bd"
            Padding="1"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="true">
            <ScrollViewer
                Template="{StaticResource ScrolViewerTemplate}"
                Background="{TemplateBinding Background}" 
                BorderBrush="{TemplateBinding BorderBrush}"
                Foreground="{TemplateBinding Foreground}"
                Focusable="false" 
                Padding="{TemplateBinding Padding}">
                <ItemsPresenter 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </ScrollViewer>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" TargetName="Bd" 
                                    Value="0.2"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                </MultiTrigger.Conditions>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <!--#endregion LIST BOX-->


    <!--#region SLIDER-->


    <ControlTemplate x:Key="SliderThumbTemplate" TargetType="{x:Type Thumb}">
        <Grid HorizontalAlignment="Center" 
              UseLayoutRounding="True" 
              VerticalAlignment="Center"
              x:Name="grid">

            <Border
                x:Name="grip"
                Style="{StaticResource BottomBorder}"
                Background="{TemplateBinding Background}"
                Width="11"
                Height="18"/>

            <Border
                x:Name="top"
                Style="{StaticResource TopBorder}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter 
                        Property="Opacity" 
                        TargetName="top" 
                        Value="0.8"/>
            </Trigger>
            <Trigger Property="IsDragging" Value="true">
                <Setter 
                        Property="Opacity" 
                        TargetName="top" 
                        Value="0"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" TargetName="grip" Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <ControlTemplate x:Key="SliderHorizontal" TargetType="{x:Type Slider}">
        <Border x:Name="border" 
                Background="Transparent"
                BorderBrush="Transparent"
                SnapsToDevicePixels="True">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <TickBar 
                        x:Name="TopTick" 
                        Fill="{TemplateBinding Foreground}" 
                        Height="4" 
                        Margin="0,0,0,2" 
                        Placement="Top" 
                        Grid.Row="0" 
                        Visibility="Collapsed"/>
                <TickBar 
                        x:Name="BottomTick" 
                        Fill="{TemplateBinding Foreground}" 
                        Height="4" 
                        Margin="0,2,0,0" 
                        Placement="Bottom" 
                        Grid.Row="2" 
                        Visibility="Collapsed"/>
                <Border 
                        x:Name="TrackBackground" 
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="1" 
                        Height="4.0" 
                        Margin="5,0" 
                        Grid.Row="1" 
                        VerticalAlignment="center">
                    <Canvas 
                        Margin="-6,-1">
                        <Rectangle 
                            x:Name="PART_SelectionRange" 
                            Fill="{TemplateBinding Background}" 
                            Height="4.0" Visibility="Hidden"/>
                    </Canvas>
                </Border>

                <Track x:Name="PART_Track" Grid.Row="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Template="{StaticResource TransparentButtonTemplate}"/>
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Template="{StaticResource TransparentButtonTemplate}"/>
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb 
                            x:Name="Thumb" 
                            Focusable="False" 
                            Height="18" 
                            Background="{TemplateBinding Background}"
                            OverridesDefaultStyle="True" 
                            Template="{StaticResource SliderThumbTemplate}" 
                            VerticalAlignment="Center" 
                            Width="11"/>
                    </Track.Thumb>
                </Track>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                <Setter Property="Margin" TargetName="TrackBackground" Value="5,2,5,0"/>
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                <Setter Property="Margin" TargetName="TrackBackground" Value="5,0,5,2"/>
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsSelectionRangeEnabled" Value="true">
                <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <ControlTemplate x:Key="SliderVertical" TargetType="{x:Type Slider}">
        <Border 
                x:Name="border" 
                Background="Transparent"
                BorderBrush="Transparent" 
                SnapsToDevicePixels="True">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TickBar 
                        x:Name="TopTick" 
                        Grid.Column="0" 
                        Fill="{TemplateBinding Foreground}" 
                        Margin="0,0,2,0" 
                        Placement="Left" 
                        Visibility="Collapsed" 
                        Width="4"/>
                <TickBar 
                        x:Name="BottomTick" 
                        Grid.Column="2" 
                        Fill="{TemplateBinding Foreground}" 
                        Margin="2,0,0,0" 
                        Placement="Right" 
                        Visibility="Collapsed" 
                        Width="4"/>
                <Border 
                        x:Name="TrackBackground" 
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}"  
                        BorderThickness="1" 
                        Grid.Column="1" 
                        HorizontalAlignment="center" 
                        Margin="0,5" 
                        Width="4.0">
                    <Canvas Margin="-1,-6">
                        <Rectangle 
                            x:Name="PART_SelectionRange" 
                            Fill="{TemplateBinding Background}"  
                            Visibility="Hidden" 
                            Width="4.0"/>
                    </Canvas>
                </Border>
                <Track 
                        x:Name="PART_Track" 
                        Grid.Column="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton 
                                Command="{x:Static Slider.DecreaseLarge}" 
                                Template="{StaticResource TransparentButtonTemplate}"/>
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton 
                                Command="{x:Static Slider.IncreaseLarge}" 
                                Template="{StaticResource TransparentButtonTemplate}"/>
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb 
                                x:Name="Thumb" 
                                Focusable="False" 
                                Height="11" 
                                OverridesDefaultStyle="True" 
                                Template="{StaticResource SliderThumbTemplate}" 
                                VerticalAlignment="Top" 
                                Width="18"/>
                    </Track.Thumb>
                </Track>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                <Setter Property="Margin" TargetName="TrackBackground" Value="2,5,0,5"/>
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
                <Setter Property="Margin" TargetName="TrackBackground" Value="0,5,2,5"/>
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
                <Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsSelectionRangeEnabled" Value="true">
                <Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--#endregion SLIDER-->


    <!--#region  EXPANDER-->

    <Storyboard
       x:Key="leftRight"
       Storyboard.TargetProperty="(Path.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)">
        <DoubleAnimation
           From="90"
           To="-90"
           Duration="0:0:0.5"
           DecelerationRatio="0.2"/>
    </Storyboard>

    <Storyboard
        x:Key="rightLeft"
        Storyboard.TargetProperty="(Path.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)">
        <DoubleAnimation
            From="-90"
            To="90"
            Duration="0:0:0.5"
            DecelerationRatio="0.2"/>
    </Storyboard>

    <Storyboard
       x:Key="upDown"
       Storyboard.TargetProperty="(Path.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)">
        <DoubleAnimation
           From="0"
           To="180"
           Duration="0:0:0.5"
           DecelerationRatio="0.2"/>
    </Storyboard>

    <Storyboard
        x:Key="downUp"
        Storyboard.TargetProperty="(Path.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)">
        <DoubleAnimation
            From="180"
            To="0"
            Duration="0:0:0.5"
            DecelerationRatio="0.2"/>
    </Storyboard>

    <ControlTemplate x:Key="LeftExpanderTemplate" TargetType="{x:Type Expander}">
        <Border 
           Background="{TemplateBinding Background}" 
           BorderBrush="{TemplateBinding BorderBrush}" 
           BorderThickness="{TemplateBinding BorderThickness}" 
           CornerRadius="3" 
           SnapsToDevicePixels="true">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition />
                </Grid.RowDefinitions>
                <ToggleButton 
                   x:Name="HeaderSite" 
                   Template="{StaticResource TransparentButtonTemplate}"
                   ContentTemplate="{TemplateBinding HeaderTemplate}" 
                   ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" 
                   Background="Transparent"
                   BorderThickness="1"
                   FontStretch="{TemplateBinding FontStretch}" 
                   Foreground="{TemplateBinding Foreground}" 
                   FontStyle="{TemplateBinding FontStyle}" 
                   FontFamily="{TemplateBinding FontFamily}" 
                   FontWeight="{TemplateBinding FontWeight}" 
                   FontSize="{TemplateBinding FontSize}" 
                   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                   IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                   Margin="1" 
                   MinWidth="0" 
                   MinHeight="0" 
                   Padding="10"
                   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                    <Path 
                       x:Name="arrow" 
                       Data="M 1,1.5 L 4.5,5 L 8,1.5" 
                       HorizontalAlignment="Center" 
                       Stroke="{StaticResource SemiDarkBrush}" 
                       SnapsToDevicePixels="false" 
                       StrokeThickness="2" 
                       RenderTransformOrigin="0.5 0.5"
                       VerticalAlignment="Center">

                        <Path.RenderTransform>
                            <TransformGroup>
                                <RotateTransform x:Name="rotate"/>
                            </TransformGroup>
                        </Path.RenderTransform>


                        <Path.Style>
                            <Style>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Expander}, Path=IsExpanded}" Value="true">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard x:Name="left" Storyboard="{StaticResource rightLeft}"/>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <RemoveStoryboard BeginStoryboardName="left"/>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Expander}, Path=IsExpanded}" Value="False">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard x:Name="right" Storyboard="{StaticResource leftRight}"/>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <RemoveStoryboard BeginStoryboardName="right"/>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Path.Style>
                    </Path>
                </ToggleButton>

                <ContentPresenter 
                   Grid.Row="1"
                   x:Name="header"
                   HorizontalAlignment="Center" 
                   Margin="0,4,0,0" 
                   RecognizesAccessKey="True" 
                   SnapsToDevicePixels="True"
                   Content="{TemplateBinding Header}"/>

                <ContentPresenter 
                   Grid.Row="1"
                   x:Name="ExpandSite" 
                   Focusable="false" 
                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                   Margin="{TemplateBinding Padding}" 
                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                   Visibility="Collapsed"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="true">
                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
                <Setter Property="Visibility" TargetName="header" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="DownExpanderTemplate" TargetType="{x:Type Expander}">
        <Border 
           Background="{TemplateBinding Background}" 
           BorderBrush="{TemplateBinding BorderBrush}" 
           BorderThickness="{TemplateBinding BorderThickness}" 
           CornerRadius="3" 
           SnapsToDevicePixels="true">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition />
                </Grid.RowDefinitions>

                <ToggleButton 
                   x:Name="HeaderSite" 
                   Template="{StaticResource TransparentButtonTemplate}"
                   ContentTemplate="{TemplateBinding HeaderTemplate}" 
                   ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" 
                   Background="Transparent"
                   BorderThickness="1"
                   FontStretch="{TemplateBinding FontStretch}" 
                   Foreground="{TemplateBinding Foreground}" 
                   FontStyle="{TemplateBinding FontStyle}" 
                   FontFamily="{TemplateBinding FontFamily}" 
                   FontWeight="{TemplateBinding FontWeight}" 
                   FontSize="{TemplateBinding FontSize}" 
                   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                   IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" 
                   Margin="1" 
                   MinWidth="0" 
                   MinHeight="0" 
                   Padding="10"
                   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Path 
                            x:Name="arrow" 
                            Data="M 1,1.5 L 4.5,5 L 8,1.5" 
                            HorizontalAlignment="Center" 
                            Stroke="{StaticResource SemiDarkBrush}" 
                            SnapsToDevicePixels="false" 
                            StrokeThickness="2" 
                            RenderTransformOrigin="0.5 0.5"
                            VerticalAlignment="Center">

                            <Path.RenderTransform>
                                <TransformGroup>
                                    <RotateTransform x:Name="rotate"/>
                                </TransformGroup>
                            </Path.RenderTransform>


                            <Path.Style>
                                <Style>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Expander}, Path=IsExpanded}" Value="true">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard x:Name="left" Storyboard="{StaticResource upDown}"/>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <RemoveStoryboard BeginStoryboardName="left"/>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Expander}, Path=IsExpanded}" Value="False">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard x:Name="right" Storyboard="{StaticResource downUp}"/>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <RemoveStoryboard BeginStoryboardName="right"/>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Path.Style>
                        </Path>

                        <ContentPresenter 
                            Grid.Column="1"
                            x:Name="header"
                            HorizontalAlignment="Left"  
                            RecognizesAccessKey="True" 
                            SnapsToDevicePixels="True"
                            Content="{TemplateBinding Header}"/>
                    </Grid>

                </ToggleButton>


                <ContentPresenter 
                   Grid.Row="1"
                   Grid.ColumnSpan="2"
                   x:Name="ExpandSite" 
                   Focusable="false" 
                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                   Margin="{TemplateBinding Padding}" 
                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                   Visibility="Collapsed"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="true">
                <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <!--#endregion  EXPANDER-->


    <!--#region GROUP BOX-->
    <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
    <ControlTemplate x:Key="GroupBoxTemplate" TargetType="{x:Type GroupBox}">
        <Grid SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="6"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="6"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="6"/>
            </Grid.RowDefinitions>

            <Border 
                Background="{TemplateBinding Background}" 
                BorderBrush="Transparent" 
                BorderThickness="{TemplateBinding BorderThickness}" 
                CornerRadius="4" 
                Grid.Column="0" 
                Grid.ColumnSpan="4" 
                Grid.RowSpan="3" 
                Grid.Row="1"/>

            <Border 
                BorderThickness="{TemplateBinding BorderThickness}" 
                Style="{StaticResource BottomBorder}"
                BorderBrush="#888888"
                Grid.ColumnSpan="4" 
                Grid.RowSpan="3" 
                Grid.Row="1">
                <Border.OpacityMask>
                    <MultiBinding ConverterParameter="7" Converter="{StaticResource BorderGapMaskConverter}">
                        <Binding ElementName="Header" Path="ActualWidth"/>
                        <Binding Path="ActualWidth" RelativeSource="{RelativeSource Mode=Self}"/>
                        <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=Self}"/>
                    </MultiBinding>
                </Border.OpacityMask>
            </Border>
            <Border 
                x:Name="Header" 
                Grid.Column="1" 
                Padding="3,1,3,0" 
                Grid.RowSpan="2" 
                Grid.Row="0">
                <ContentPresenter 
                    ContentSource="Header" 
                    RecognizesAccessKey="True" 
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </Border>
            <ContentPresenter 
                Grid.Column="1" 
                Grid.ColumnSpan="2" 
                Margin="{TemplateBinding Padding}" 
                Grid.Row="2" 
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        </Grid>
    </ControlTemplate>

    <!--#endregion GROUP BOX-->
</ResourceDictionary>